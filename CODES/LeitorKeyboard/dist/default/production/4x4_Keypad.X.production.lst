

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Oct 20 12:37:09 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    21  0000                     
    22                           	psect	idataCOMRAM
    23  000B70                     __pidataCOMRAM:
    24                           	opt stack 0
    25                           
    26                           ;initializer for _keypad
    27  000B70  37                 	db	55
    28  000B71  38                 	db	56
    29  000B72  39                 	db	57
    30  000B73  2F                 	db	47
    31  000B74  34                 	db	52
    32  000B75  35                 	db	53
    33  000B76  36                 	db	54
    34  000B77  2A                 	db	42
    35  000B78  31                 	db	49
    36  000B79  32                 	db	50
    37  000B7A  33                 	db	51
    38  000B7B  2D                 	db	45
    39  000B7C  20                 	db	32
    40  000B7D  30                 	db	48
    41  000B7E  3D                 	db	61
    42  000B7F  2B                 	db	43
    43  0000                     _LATB	set	3978
    44  0000                     _LATD	set	3980
    45  0000                     _OSCCON	set	4051
    46  0000                     _PORTB	set	3969
    47  0000                     _TRISB	set	3987
    48  0000                     _TRISD	set	3989
    49  0000                     _LATD0	set	31840
    50  0000                     _LATD1	set	31841
    51  0000                     _RBPU	set	32655
    52                           
    53                           	psect	smallconst
    54  000800                     __psmallconst:
    55                           	opt stack 0
    56  000800  00                 	db	0
    57  000801                     STR_1:
    58  000801  50                 	db	80	;'P'
    59  000802  72                 	db	114	;'r'
    60  000803  65                 	db	101	;'e'
    61  000804  73                 	db	115	;'s'
    62  000805  73                 	db	115	;'s'
    63  000806  20                 	db	32
    64  000807  61                 	db	97	;'a'
    65  000808  20                 	db	32
    66  000809  4B                 	db	75	;'K'
    67  00080A  65                 	db	101	;'e'
    68  00080B  79                 	db	121	;'y'
    69  00080C  00                 	db	0
    70                           
    71                           ; #config settings
    72  00080D  00                 	db	0	; dummy byte at the end
    73  0000                     
    74                           	psect	cinit
    75  000AE0                     __pcinit:
    76                           	opt stack 0
    77  000AE0                     start_initialization:
    78                           	opt stack 0
    79  000AE0                     __initialization:
    80                           	opt stack 0
    81                           
    82                           ; Clear objects allocated to COMRAM (3 bytes)
    83  000AE0  6A23               	clrf	(__pbssCOMRAM+2)& (0+255),c
    84  000AE2  6A22               	clrf	(__pbssCOMRAM+1)& (0+255),c
    85  000AE4  6A21               	clrf	__pbssCOMRAM& (0+255),c
    86                           
    87                           ; Initialize objects allocated to COMRAM (16 bytes)
    88                           ; load TBLPTR registers with __pidataCOMRAM
    89  000AE6  0E70               	movlw	low __pidataCOMRAM
    90  000AE8  6EF6               	movwf	tblptrl,c
    91  000AEA  0E0B               	movlw	high __pidataCOMRAM
    92  000AEC  6EF7               	movwf	tblptrh,c
    93  000AEE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    94  000AF0  6EF8               	movwf	tblptru,c
    95  000AF2  EE00  F001         	lfsr	0,__pdataCOMRAM
    96  000AF6  EE10 F010          	lfsr	1,16
    97  000AFA                     copy_data0:
    98  000AFA  0009               	tblrd		*+
    99  000AFC  CFF5 FFEE          	movff	tablat,postinc0
   100  000B00  50E5               	movf	postdec1,w,c
   101  000B02  50E1               	movf	fsr1l,w,c
   102  000B04  E1FA               	bnz	copy_data0
   103  000B06                     end_of_initialization:
   104                           	opt stack 0
   105  000B06                     __end_of__initialization:
   106                           	opt stack 0
   107  000B06  0E00               	movlw	low (__Lsmallconst shr (0+16))
   108  000B08  6EF8               	movwf	tblptru,c
   109  000B0A  0E08               	movlw	high __Lsmallconst
   110  000B0C  6EF7               	movwf	tblptrh,c
   111  000B0E  0100               	movlb	0
   112  000B10  EF55  F005         	goto	_main	;jump to C main() function
   113                           tblptru	equ	0xFF8
   114                           tblptrh	equ	0xFF7
   115                           tblptrl	equ	0xFF6
   116                           tablat	equ	0xFF5
   117                           postinc0	equ	0xFEE
   118                           postdec1	equ	0xFE5
   119                           fsr1l	equ	0xFE1
   120                           
   121                           	psect	bssCOMRAM
   122  000021                     __pbssCOMRAM:
   123                           	opt stack 0
   124  000021                     _col_loc:
   125                           	opt stack 0
   126  000021                     	ds	1
   127  000022                     _rowloc:
   128                           	opt stack 0
   129  000022                     	ds	1
   130  000023                     _temp_col:
   131                           	opt stack 0
   132  000023                     	ds	1
   133                           tblptru	equ	0xFF8
   134                           tblptrh	equ	0xFF7
   135                           tblptrl	equ	0xFF6
   136                           tablat	equ	0xFF5
   137                           postinc0	equ	0xFEE
   138                           postdec1	equ	0xFE5
   139                           fsr1l	equ	0xFE1
   140                           
   141                           	psect	dataCOMRAM
   142  000001                     __pdataCOMRAM:
   143                           	opt stack 0
   144  000001                     _keypad:
   145                           	opt stack 0
   146  000001                     	ds	16
   147                           tblptru	equ	0xFF8
   148                           tblptrh	equ	0xFF7
   149                           tblptrl	equ	0xFF6
   150                           tablat	equ	0xFF5
   151                           postinc0	equ	0xFEE
   152                           postdec1	equ	0xFE5
   153                           fsr1l	equ	0xFE1
   154                           
   155                           	psect	cstackCOMRAM
   156  000011                     __pcstackCOMRAM:
   157                           	opt stack 0
   158  000011                     MSdelay@val:
   159                           	opt stack 0
   160                           
   161                           ; 2 bytes @ 0x0
   162  000011                     	ds	2
   163  000013                     MSdelay@i:
   164                           	opt stack 0
   165                           
   166                           ; 2 bytes @ 0x2
   167  000013                     	ds	2
   168  000015                     MSdelay@j:
   169                           	opt stack 0
   170                           
   171                           ; 2 bytes @ 0x4
   172  000015                     	ds	2
   173  000017                     ??_LCD_Command:
   174  000017                     ??_LCD_Char:
   175                           
   176                           ; 0 bytes @ 0x6
   177  000017                     	ds	1
   178  000018                     LCD_Command@cmd:
   179                           	opt stack 0
   180  000018                     LCD_Char@dat:
   181                           	opt stack 0
   182                           
   183                           ; 1 bytes @ 0x7
   184  000018                     	ds	1
   185  000019                     LCD_String@msg:
   186                           	opt stack 0
   187                           
   188                           ; 2 bytes @ 0x8
   189  000019                     	ds	2
   190  00001B                     LCD_String_xy@pos:
   191                           	opt stack 0
   192                           
   193                           ; 1 bytes @ 0xA
   194  00001B                     	ds	1
   195  00001C                     LCD_String_xy@msg:
   196                           	opt stack 0
   197                           
   198                           ; 2 bytes @ 0xB
   199  00001C                     	ds	2
   200  00001E                     LCD_String_xy@row:
   201                           	opt stack 0
   202                           
   203                           ; 1 bytes @ 0xD
   204  00001E                     	ds	1
   205  00001F                     LCD_String_xy@location:
   206                           	opt stack 0
   207                           
   208                           ; 1 bytes @ 0xE
   209  00001F                     	ds	1
   210  000020                     main@key:
   211                           	opt stack 0
   212                           
   213                           ; 1 bytes @ 0xF
   214  000020                     	ds	1
   215                           tblptru	equ	0xFF8
   216                           tblptrh	equ	0xFF7
   217                           tblptrl	equ	0xFF6
   218                           tablat	equ	0xFF5
   219                           postinc0	equ	0xFEE
   220                           postdec1	equ	0xFE5
   221                           fsr1l	equ	0xFE1
   222                           
   223 ;;
   224 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   225 ;;
   226 ;; *************** function _main *****************
   227 ;; Defined at:
   228 ;;		line 23 in file "4x4_Keypad.c"
   229 ;; Parameters:    Size  Location     Type
   230 ;;		None
   231 ;; Auto vars:     Size  Location     Type
   232 ;;  key             1   15[COMRAM] unsigned char 
   233 ;; Return value:  Size  Location     Type
   234 ;;		None               void
   235 ;; Registers used:
   236 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   237 ;; Tracked objects:
   238 ;;		On entry : 0/0
   239 ;;		On exit  : 0/0
   240 ;;		Unchanged: 0/0
   241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   242 ;;      Params:         0       0       0       0       0       0       0       0       0
   243 ;;      Locals:         1       0       0       0       0       0       0       0       0
   244 ;;      Temps:          0       0       0       0       0       0       0       0       0
   245 ;;      Totals:         1       0       0       0       0       0       0       0       0
   246 ;;Total ram usage:        1 bytes
   247 ;; Hardware stack levels required when called:    4
   248 ;; This function calls:
   249 ;;		_LCD_Char
   250 ;;		_LCD_Command
   251 ;;		_LCD_Init
   252 ;;		_LCD_String_xy
   253 ;;		_keyfind
   254 ;; This function is called by:
   255 ;;		Startup code after reset
   256 ;; This function uses a non-reentrant model
   257 ;;
   258                           
   259                           	psect	text0
   260  000AAA                     __ptext0:
   261                           	opt stack 0
   262  000AAA                     _main:
   263                           	opt stack 27
   264                           
   265                           ;4x4_Keypad.c: 25: char key;
   266                           ;4x4_Keypad.c: 26: OSCCON = 0x72;
   267                           
   268                           ;incstack = 0
   269  000AAA  0E72               	movlw	114
   270  000AAC  6ED3               	movwf	4051,c	;volatile
   271                           
   272                           ;4x4_Keypad.c: 28: RBPU=0;
   273  000AAE  9EF1               	bcf	intcon2,7,c	;volatile
   274                           
   275                           ;4x4_Keypad.c: 29: LCD_Init();
   276  000AB0  EC8A  F005         	call	_LCD_Init	;wreg free
   277                           
   278                           ;4x4_Keypad.c: 30: LCD_String_xy(0,0,"Press a Key");
   279  000AB4  0E00               	movlw	0
   280  000AB6  6E1B               	movwf	LCD_String_xy@pos,c
   281  000AB8  0E01               	movlw	low STR_1
   282  000ABA  6E1C               	movwf	LCD_String_xy@msg,c
   283  000ABC  0E08               	movlw	high STR_1
   284  000ABE  6E1D               	movwf	LCD_String_xy@msg+1,c
   285  000AC0  0E00               	movlw	0
   286  000AC2  EC38  F005         	call	_LCD_String_xy
   287                           
   288                           ;4x4_Keypad.c: 31: LCD_Command(0xC0);
   289  000AC6  0EC0               	movlw	192
   290  000AC8  ECF3  F004         	call	_LCD_Command
   291  000ACC  D000               	goto	l1122
   292  000ACE                     l1122:
   293                           
   294                           ;4x4_Keypad.c: 33: {
   295                           ;4x4_Keypad.c: 34: key = keyfind();
   296  000ACE  EC07  F004         	call	_keyfind	;wreg free
   297  000AD2  6E20               	movwf	main@key,c
   298                           
   299                           ;4x4_Keypad.c: 35: LCD_Char(key);
   300  000AD4  5020               	movf	main@key,w,c
   301  000AD6  ECCD  F004         	call	_LCD_Char
   302  000ADA  D7F9               	goto	l1122
   303  000ADC  EF00  F000         	goto	start
   304  000AE0                     __end_of_main:
   305                           	opt stack 0
   306                           tblptru	equ	0xFF8
   307                           tblptrh	equ	0xFF7
   308                           tblptrl	equ	0xFF6
   309                           tablat	equ	0xFF5
   310                           intcon2	equ	0xFF1
   311                           postinc0	equ	0xFEE
   312                           postdec1	equ	0xFE5
   313                           fsr1l	equ	0xFE1
   314                           
   315 ;; *************** function _keyfind *****************
   316 ;; Defined at:
   317 ;;		line 40 in file "4x4_Keypad.c"
   318 ;; Parameters:    Size  Location     Type
   319 ;;		None
   320 ;; Auto vars:     Size  Location     Type
   321 ;;  temp1           1    0        unsigned char 
   322 ;; Return value:  Size  Location     Type
   323 ;;                  1    wreg      unsigned char 
   324 ;; Registers used:
   325 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   326 ;; Tracked objects:
   327 ;;		On entry : 0/0
   328 ;;		On exit  : 0/0
   329 ;;		Unchanged: 0/0
   330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   331 ;;      Params:         0       0       0       0       0       0       0       0       0
   332 ;;      Locals:         0       0       0       0       0       0       0       0       0
   333 ;;      Temps:          0       0       0       0       0       0       0       0       0
   334 ;;      Totals:         0       0       0       0       0       0       0       0       0
   335 ;;Total ram usage:        0 bytes
   336 ;; Hardware stack levels used:    1
   337 ;; Hardware stack levels required when called:    1
   338 ;; This function calls:
   339 ;;		_MSdelay
   340 ;; This function is called by:
   341 ;;		_main
   342 ;; This function uses a non-reentrant model
   343 ;;
   344                           
   345                           	psect	text1
   346  00080E                     __ptext1:
   347                           	opt stack 0
   348  00080E                     _keyfind:
   349                           	opt stack 29
   350                           
   351                           ;4x4_Keypad.c: 43: TRISB=0xf0;
   352                           
   353                           ;incstack = 0
   354  00080E  0EF0               	movlw	240
   355  000810  6E93               	movwf	3987,c	;volatile
   356                           
   357                           ;4x4_Keypad.c: 44: unsigned char temp1;
   358                           ;4x4_Keypad.c: 46: LATB = 0xf0;
   359  000812  0EF0               	movlw	240
   360  000814  6E8A               	movwf	3978,c	;volatile
   361                           
   362                           ;4x4_Keypad.c: 47: do
   363  000816  D000               	goto	l1012
   364  000818                     l1012:
   365                           
   366                           ;4x4_Keypad.c: 50: {
   367                           ;4x4_Keypad.c: 52: col_loc = PORTB & 0xf0;
   368  000818  5081               	movf	3969,w,c	;volatile
   369  00081A  0BF0               	andlw	240
   370  00081C  6E21               	movwf	_col_loc,c
   371                           
   372                           ;4x4_Keypad.c: 54: }while(col_loc!=0xf0);
   373  00081E  0EF0               	movlw	240
   374  000820  1821               	xorwf	_col_loc,w,c
   375  000822  A4D8               	btfss	status,2,c
   376  000824  D7F9               	goto	l1012
   377                           
   378                           ;4x4_Keypad.c: 55: col_loc = PORTB & 0xf0;
   379  000826  5081               	movf	3969,w,c	;volatile
   380  000828  0BF0               	andlw	240
   381  00082A  6E21               	movwf	_col_loc,c
   382                           
   383                           ;4x4_Keypad.c: 56: }while(col_loc!=0xf0);
   384  00082C  0EF0               	movlw	240
   385  00082E  1821               	xorwf	_col_loc,w,c
   386  000830  A4D8               	btfss	status,2,c
   387  000832  D7F2               	goto	l1012
   388                           
   389                           ;4x4_Keypad.c: 58: MSdelay(50);
   390  000834  0E00               	movlw	0
   391  000836  6E12               	movwf	MSdelay@val+1,c
   392  000838  0E32               	movlw	50
   393  00083A  6E11               	movwf	MSdelay@val,c
   394  00083C  EC19  F005         	call	_MSdelay	;wreg free
   395                           
   396                           ;4x4_Keypad.c: 59: LATB = 0xf0;
   397  000840  0EF0               	movlw	240
   398  000842  6E8A               	movwf	3978,c	;volatile
   399                           
   400                           ;4x4_Keypad.c: 60: do
   401  000844  D000               	goto	l1022
   402  000846                     l1022:
   403                           
   404                           ;4x4_Keypad.c: 63: {
   405                           ;4x4_Keypad.c: 65: col_loc = PORTB & 0xf0;
   406  000846  5081               	movf	3969,w,c	;volatile
   407  000848  0BF0               	andlw	240
   408  00084A  6E21               	movwf	_col_loc,c
   409                           
   410                           ;4x4_Keypad.c: 66: }while(col_loc==0xf0);
   411  00084C  0EF0               	movlw	240
   412  00084E  1821               	xorwf	_col_loc,w,c
   413  000850  B4D8               	btfsc	status,2,c
   414  000852  D7F9               	goto	l1022
   415                           
   416                           ;4x4_Keypad.c: 67: col_loc = PORTB & 0xf0;
   417  000854  5081               	movf	3969,w,c	;volatile
   418  000856  0BF0               	andlw	240
   419  000858  6E21               	movwf	_col_loc,c
   420                           
   421                           ;4x4_Keypad.c: 68: }while(col_loc==0xf0);
   422  00085A  0EF0               	movlw	240
   423  00085C  1821               	xorwf	_col_loc,w,c
   424  00085E  B4D8               	btfsc	status,2,c
   425  000860  D7F2               	goto	l1022
   426                           
   427                           ;4x4_Keypad.c: 70: MSdelay(20);
   428  000862  0E00               	movlw	0
   429  000864  6E12               	movwf	MSdelay@val+1,c
   430  000866  0E14               	movlw	20
   431  000868  6E11               	movwf	MSdelay@val,c
   432  00086A  EC19  F005         	call	_MSdelay	;wreg free
   433                           
   434                           ;4x4_Keypad.c: 72: col_loc = PORTB & 0xf0;
   435  00086E  5081               	movf	3969,w,c	;volatile
   436  000870  0BF0               	andlw	240
   437  000872  6E21               	movwf	_col_loc,c
   438  000874  D000               	goto	l1032
   439  000876                     l1032:
   440                           
   441                           ;4x4_Keypad.c: 77: {
   442                           ;4x4_Keypad.c: 78: LATB = 0xfe;
   443  000876  0EFE               	movlw	254
   444  000878  6E8A               	movwf	3978,c	;volatile
   445                           
   446                           ;4x4_Keypad.c: 79: col_loc = PORTB & 0xf0;
   447  00087A  5081               	movf	3969,w,c	;volatile
   448  00087C  0BF0               	andlw	240
   449  00087E  6E21               	movwf	_col_loc,c
   450                           
   451                           ;4x4_Keypad.c: 80: temp_col=col_loc;
   452  000880  C021  F023         	movff	_col_loc,_temp_col
   453                           
   454                           ;4x4_Keypad.c: 81: if(col_loc!=0xf0)
   455  000884  0EF0               	movlw	240
   456  000886  1821               	xorwf	_col_loc,w,c
   457  000888  B4D8               	btfsc	status,2,c
   458  00088A  D00C               	goto	l1044
   459                           
   460                           ;4x4_Keypad.c: 82: {
   461                           ;4x4_Keypad.c: 83: rowloc=0;
   462  00088C  0E00               	movlw	0
   463  00088E  6E22               	movwf	_rowloc,c
   464                           
   465                           ;4x4_Keypad.c: 84: while(temp_col!=0xf0)
   466  000890  D003               	goto	l94
   467  000892                     l1042:
   468                           
   469                           ;4x4_Keypad.c: 85: {
   470                           ;4x4_Keypad.c: 86: temp_col = PORTB & 0xf0;
   471  000892  5081               	movf	3969,w,c	;volatile
   472  000894  0BF0               	andlw	240
   473  000896  6E23               	movwf	_temp_col,c
   474  000898                     l94:
   475  000898  0EF0               	movlw	240
   476  00089A  1823               	xorwf	_temp_col,w,c
   477  00089C  B4D8               	btfsc	status,2,c
   478  00089E  D049               	goto	l1080
   479  0008A0  D7F8               	goto	l1042
   480                           
   481                           ;4x4_Keypad.c: 87: }
   482                           ;4x4_Keypad.c: 88: break;
   483  0008A2  D047               	goto	l1080
   484  0008A4                     l1044:
   485                           
   486                           ;4x4_Keypad.c: 89: }
   487                           ;4x4_Keypad.c: 90: LATB = 0xfd;
   488  0008A4  0EFD               	movlw	253
   489  0008A6  6E8A               	movwf	3978,c	;volatile
   490                           
   491                           ;4x4_Keypad.c: 91: col_loc = PORTB & 0xf0;
   492  0008A8  5081               	movf	3969,w,c	;volatile
   493  0008AA  0BF0               	andlw	240
   494  0008AC  6E21               	movwf	_col_loc,c
   495                           
   496                           ;4x4_Keypad.c: 92: temp_col=col_loc;
   497  0008AE  C021  F023         	movff	_col_loc,_temp_col
   498                           
   499                           ;4x4_Keypad.c: 93: if(col_loc!=0xf0)
   500  0008B2  0EF0               	movlw	240
   501  0008B4  1821               	xorwf	_col_loc,w,c
   502  0008B6  B4D8               	btfsc	status,2,c
   503  0008B8  D00C               	goto	l1056
   504                           
   505                           ;4x4_Keypad.c: 94: {
   506                           ;4x4_Keypad.c: 95: rowloc=1;
   507  0008BA  0E01               	movlw	1
   508  0008BC  6E22               	movwf	_rowloc,c
   509                           
   510                           ;4x4_Keypad.c: 96: while(temp_col!=0xf0)
   511  0008BE  D003               	goto	l99
   512  0008C0                     l1054:
   513                           
   514                           ;4x4_Keypad.c: 97: {
   515                           ;4x4_Keypad.c: 98: temp_col = PORTB & 0xf0;
   516  0008C0  5081               	movf	3969,w,c	;volatile
   517  0008C2  0BF0               	andlw	240
   518  0008C4  6E23               	movwf	_temp_col,c
   519  0008C6                     l99:
   520  0008C6  0EF0               	movlw	240
   521  0008C8  1823               	xorwf	_temp_col,w,c
   522  0008CA  B4D8               	btfsc	status,2,c
   523  0008CC  D032               	goto	l1080
   524  0008CE  D7F8               	goto	l1054
   525                           
   526                           ;4x4_Keypad.c: 99: }
   527                           ;4x4_Keypad.c: 100: break;
   528  0008D0  D030               	goto	l1080
   529  0008D2                     l1056:
   530                           
   531                           ;4x4_Keypad.c: 101: }
   532                           ;4x4_Keypad.c: 102: LATB = 0xfb;
   533  0008D2  0EFB               	movlw	251
   534  0008D4  6E8A               	movwf	3978,c	;volatile
   535                           
   536                           ;4x4_Keypad.c: 103: col_loc = PORTB & 0xf0;
   537  0008D6  5081               	movf	3969,w,c	;volatile
   538  0008D8  0BF0               	andlw	240
   539  0008DA  6E21               	movwf	_col_loc,c
   540                           
   541                           ;4x4_Keypad.c: 104: temp_col=col_loc;
   542  0008DC  C021  F023         	movff	_col_loc,_temp_col
   543                           
   544                           ;4x4_Keypad.c: 105: if(col_loc!=0xf0)
   545  0008E0  0EF0               	movlw	240
   546  0008E2  1821               	xorwf	_col_loc,w,c
   547  0008E4  B4D8               	btfsc	status,2,c
   548  0008E6  D00C               	goto	l1068
   549                           
   550                           ;4x4_Keypad.c: 106: {
   551                           ;4x4_Keypad.c: 107: rowloc=2;
   552  0008E8  0E02               	movlw	2
   553  0008EA  6E22               	movwf	_rowloc,c
   554                           
   555                           ;4x4_Keypad.c: 108: while(temp_col!=0xf0)
   556  0008EC  D003               	goto	l103
   557  0008EE                     l1066:
   558                           
   559                           ;4x4_Keypad.c: 109: {
   560                           ;4x4_Keypad.c: 110: temp_col = PORTB & 0xf0;
   561  0008EE  5081               	movf	3969,w,c	;volatile
   562  0008F0  0BF0               	andlw	240
   563  0008F2  6E23               	movwf	_temp_col,c
   564  0008F4                     l103:
   565  0008F4  0EF0               	movlw	240
   566  0008F6  1823               	xorwf	_temp_col,w,c
   567  0008F8  B4D8               	btfsc	status,2,c
   568  0008FA  D01B               	goto	l1080
   569  0008FC  D7F8               	goto	l1066
   570                           
   571                           ;4x4_Keypad.c: 111: }
   572                           ;4x4_Keypad.c: 112: break;
   573  0008FE  D019               	goto	l1080
   574  000900                     l1068:
   575                           
   576                           ;4x4_Keypad.c: 113: }
   577                           ;4x4_Keypad.c: 114: LATB = 0xf7;
   578  000900  0EF7               	movlw	247
   579  000902  6E8A               	movwf	3978,c	;volatile
   580                           
   581                           ;4x4_Keypad.c: 115: col_loc = PORTB & 0xf0;
   582  000904  5081               	movf	3969,w,c	;volatile
   583  000906  0BF0               	andlw	240
   584  000908  6E21               	movwf	_col_loc,c
   585                           
   586                           ;4x4_Keypad.c: 116: temp_col=col_loc;
   587  00090A  C021  F023         	movff	_col_loc,_temp_col
   588                           
   589                           ;4x4_Keypad.c: 117: if(col_loc!=0xf0)
   590  00090E  0EF0               	movlw	240
   591  000910  1821               	xorwf	_col_loc,w,c
   592  000912  B4D8               	btfsc	status,2,c
   593  000914  D7B0               	goto	l1032
   594                           
   595                           ;4x4_Keypad.c: 118: {
   596                           ;4x4_Keypad.c: 119: rowloc=3;
   597  000916  0E03               	movlw	3
   598  000918  6E22               	movwf	_rowloc,c
   599                           
   600                           ;4x4_Keypad.c: 120: while(temp_col!=0xf0)
   601  00091A  D003               	goto	l107
   602  00091C                     l1078:
   603                           
   604                           ;4x4_Keypad.c: 121: {
   605                           ;4x4_Keypad.c: 122: temp_col = PORTB & 0xf0;
   606  00091C  5081               	movf	3969,w,c	;volatile
   607  00091E  0BF0               	andlw	240
   608  000920  6E23               	movwf	_temp_col,c
   609  000922                     l107:
   610  000922  0EF0               	movlw	240
   611  000924  1823               	xorwf	_temp_col,w,c
   612  000926  B4D8               	btfsc	status,2,c
   613  000928  D004               	goto	l1080
   614  00092A  D7F8               	goto	l1078
   615                           
   616                           ;4x4_Keypad.c: 123: }
   617                           ;4x4_Keypad.c: 124: break;
   618  00092C  D002               	goto	l1080
   619  00092E  D7A3               	goto	l1032
   620  000930  D000               	goto	l1080
   621  000932                     l1080:
   622                           
   623                           ;4x4_Keypad.c: 132: {
   624                           ;4x4_Keypad.c: 134: if(col_loc==0xe0)
   625  000932  0EE0               	movlw	224
   626  000934  1821               	xorwf	_col_loc,w,c
   627  000936  A4D8               	btfss	status,2,c
   628  000938  D005               	goto	l1088
   629                           
   630                           ;4x4_Keypad.c: 135: {
   631                           ;4x4_Keypad.c: 137: return keypad[rowloc][0];
   632  00093A  5022               	movf	_rowloc,w,c
   633  00093C  0D04               	mullw	4
   634  00093E  D00A               	goto	L1
   635  000940  D02B               	goto	l113
   636                           
   637                           ;4x4_Keypad.c: 139: }
   638  000942  D7F7               	goto	l1080
   639  000944                     l1088:
   640                           
   641                           ;4x4_Keypad.c: 140: else
   642                           ;4x4_Keypad.c: 141: if(col_loc==0xd0)
   643  000944  0ED0               	movlw	208
   644  000946  1821               	xorwf	_col_loc,w,c
   645  000948  A4D8               	btfss	status,2,c
   646  00094A  D00D               	goto	l1096
   647                           
   648                           ;4x4_Keypad.c: 142: {
   649                           ;4x4_Keypad.c: 144: return keypad[rowloc][1];
   650  00094C  5022               	movf	_rowloc,w,c
   651  00094E  0D04               	mullw	4
   652  000950  0E01               	movlw	1
   653  000952  D010               	goto	L2
   654  000954                     L1:
   655  000954  0E01               	movlw	low _keypad
   656  000956  24F3               	addwf	prodl,w,c
   657  000958  6ED9               	movwf	fsr2l,c
   658  00095A  0E00               	movlw	high _keypad
   659  00095C  20F4               	addwfc	prodh,w,c
   660  00095E  6EDA               	movwf	fsr2h,c
   661  000960  50DF               	movf	indf2,w,c
   662  000962  D01A               	goto	l113
   663                           
   664                           ;4x4_Keypad.c: 146: }
   665  000964  D7E6               	goto	l1080
   666  000966                     l1096:
   667                           
   668                           ;4x4_Keypad.c: 147: else
   669                           ;4x4_Keypad.c: 148: if(col_loc==0xb0)
   670  000966  0EB0               	movlw	176
   671  000968  1821               	xorwf	_col_loc,w,c
   672  00096A  A4D8               	btfss	status,2,c
   673  00096C  D009               	goto	l1104
   674                           
   675                           ;4x4_Keypad.c: 149: {
   676                           ;4x4_Keypad.c: 151: return keypad[rowloc][2];
   677  00096E  5022               	movf	_rowloc,w,c
   678  000970  0D04               	mullw	4
   679  000972  0E02               	movlw	2
   680  000974                     L2:
   681  000974  26F3               	addwf	prodl,f,c
   682  000976  0E00               	movlw	0
   683  000978  22F4               	addwfc	prodh,f,c
   684  00097A  D7EC               	goto	L1
   685  00097C  D00D               	goto	l113
   686                           
   687                           ;4x4_Keypad.c: 153: }
   688  00097E  D7D9               	goto	l1080
   689  000980                     l1104:
   690                           
   691                           ;4x4_Keypad.c: 154: else
   692                           ;4x4_Keypad.c: 156: {
   693                           ;4x4_Keypad.c: 159: return keypad[rowloc][3];
   694  000980  5022               	movf	_rowloc,w,c
   695  000982  0D04               	mullw	4
   696  000984  0E03               	movlw	3
   697  000986  D7F6               	goto	L2
   698  000988  D007               	goto	l113
   699  00098A  D7D3               	goto	l1080
   700                           
   701                           ;4x4_Keypad.c: 161: }
   702                           ;4x4_Keypad.c: 162: }
   703                           ;4x4_Keypad.c: 164: MSdelay(300);
   704  00098C  0E01               	movlw	1
   705  00098E  6E12               	movwf	MSdelay@val+1,c
   706  000990  0E2C               	movlw	44
   707  000992  6E11               	movwf	MSdelay@val,c
   708  000994  EC19  F005         	call	_MSdelay	;wreg free
   709  000998                     l113:
   710  000998  0012               	return		;funcret
   711  00099A                     __end_of_keyfind:
   712                           	opt stack 0
   713                           tblptru	equ	0xFF8
   714                           tblptrh	equ	0xFF7
   715                           tblptrl	equ	0xFF6
   716                           tablat	equ	0xFF5
   717                           prodh	equ	0xFF4
   718                           prodl	equ	0xFF3
   719                           intcon2	equ	0xFF1
   720                           postinc0	equ	0xFEE
   721                           postdec1	equ	0xFE5
   722                           fsr1l	equ	0xFE1
   723                           indf2	equ	0xFDF
   724                           fsr2h	equ	0xFDA
   725                           fsr2l	equ	0xFD9
   726                           status	equ	0xFD8
   727                           
   728 ;; *************** function _LCD_String_xy *****************
   729 ;; Defined at:
   730 ;;		line 63 in file "LCD_16x2_4bit_mode.c"
   731 ;; Parameters:    Size  Location     Type
   732 ;;  row             1    wreg     unsigned char 
   733 ;;  pos             1   10[COMRAM] unsigned char 
   734 ;;  msg             2   11[COMRAM] PTR const unsigned char 
   735 ;;		 -> STR_1(12), 
   736 ;; Auto vars:     Size  Location     Type
   737 ;;  row             1   13[COMRAM] unsigned char 
   738 ;;  location        1   14[COMRAM] unsigned char 
   739 ;; Return value:  Size  Location     Type
   740 ;;		None               void
   741 ;; Registers used:
   742 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   743 ;; Tracked objects:
   744 ;;		On entry : 0/0
   745 ;;		On exit  : 0/0
   746 ;;		Unchanged: 0/0
   747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   748 ;;      Params:         3       0       0       0       0       0       0       0       0
   749 ;;      Locals:         2       0       0       0       0       0       0       0       0
   750 ;;      Temps:          0       0       0       0       0       0       0       0       0
   751 ;;      Totals:         5       0       0       0       0       0       0       0       0
   752 ;;Total ram usage:        5 bytes
   753 ;; Hardware stack levels used:    1
   754 ;; Hardware stack levels required when called:    3
   755 ;; This function calls:
   756 ;;		_LCD_Command
   757 ;;		_LCD_String
   758 ;; This function is called by:
   759 ;;		_main
   760 ;; This function uses a non-reentrant model
   761 ;;
   762                           
   763                           	psect	text2
   764  000A70                     __ptext2:
   765                           	opt stack 0
   766  000A70                     _LCD_String_xy:
   767                           	opt stack 27
   768                           
   769                           ;incstack = 0
   770                           ;LCD_String_xy@row stored from wreg
   771  000A70  6E1E               	movwf	LCD_String_xy@row,c
   772                           
   773                           ;LCD_16x2_4bit_mode.c: 65: char location=0;
   774  000A72  0E00               	movlw	0
   775  000A74  6E1F               	movwf	LCD_String_xy@location,c
   776                           
   777                           ;LCD_16x2_4bit_mode.c: 66: if(row<=1)
   778  000A76  0E02               	movlw	2
   779  000A78  601E               	cpfslt	LCD_String_xy@row,c
   780  000A7A  D008               	goto	l1004
   781                           
   782                           ;LCD_16x2_4bit_mode.c: 67: {
   783                           ;LCD_16x2_4bit_mode.c: 68: location = (0x80) | ((pos) & 0x0f);
   784  000A7C  501B               	movf	LCD_String_xy@pos,w,c
   785  000A7E  0B0F               	andlw	15
   786  000A80  0980               	iorlw	128
   787  000A82  6E1F               	movwf	LCD_String_xy@location,c
   788                           
   789                           ;LCD_16x2_4bit_mode.c: 69: LCD_Command(location);
   790  000A84  501F               	movf	LCD_String_xy@location,w,c
   791  000A86  ECF3  F004         	call	_LCD_Command
   792                           
   793                           ;LCD_16x2_4bit_mode.c: 70: }
   794  000A8A  D008               	goto	l1008
   795  000A8C                     l1004:
   796                           
   797                           ;LCD_16x2_4bit_mode.c: 71: else
   798                           ;LCD_16x2_4bit_mode.c: 72: {
   799                           ;LCD_16x2_4bit_mode.c: 73: location = (0xC0) | ((pos) & 0x0f);
   800  000A8C  501B               	movf	LCD_String_xy@pos,w,c
   801  000A8E  0B0F               	andlw	15
   802  000A90  09C0               	iorlw	192
   803  000A92  6E1F               	movwf	LCD_String_xy@location,c
   804                           
   805                           ;LCD_16x2_4bit_mode.c: 74: LCD_Command(location);
   806  000A94  501F               	movf	LCD_String_xy@location,w,c
   807  000A96  ECF3  F004         	call	_LCD_Command
   808  000A9A  D000               	goto	l1008
   809  000A9C                     l1008:
   810                           
   811                           ;LCD_16x2_4bit_mode.c: 75: }
   812                           ;LCD_16x2_4bit_mode.c: 78: LCD_String(msg);
   813  000A9C  C01C  F019         	movff	LCD_String_xy@msg,LCD_String@msg
   814  000AA0  C01D  F01A         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
   815  000AA4  ECA2  F005         	call	_LCD_String	;wreg free
   816  000AA8  0012               	return		;funcret
   817  000AAA                     __end_of_LCD_String_xy:
   818                           	opt stack 0
   819                           tblptru	equ	0xFF8
   820                           tblptrh	equ	0xFF7
   821                           tblptrl	equ	0xFF6
   822                           tablat	equ	0xFF5
   823                           prodh	equ	0xFF4
   824                           prodl	equ	0xFF3
   825                           intcon2	equ	0xFF1
   826                           postinc0	equ	0xFEE
   827                           postdec1	equ	0xFE5
   828                           fsr1l	equ	0xFE1
   829                           indf2	equ	0xFDF
   830                           fsr2h	equ	0xFDA
   831                           fsr2l	equ	0xFD9
   832                           status	equ	0xFD8
   833                           
   834 ;; *************** function _LCD_String *****************
   835 ;; Defined at:
   836 ;;		line 53 in file "LCD_16x2_4bit_mode.c"
   837 ;; Parameters:    Size  Location     Type
   838 ;;  msg             2    8[COMRAM] PTR const unsigned char 
   839 ;;		 -> STR_1(12), 
   840 ;; Auto vars:     Size  Location     Type
   841 ;;		None
   842 ;; Return value:  Size  Location     Type
   843 ;;		None               void
   844 ;; Registers used:
   845 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   846 ;; Tracked objects:
   847 ;;		On entry : 0/0
   848 ;;		On exit  : 0/0
   849 ;;		Unchanged: 0/0
   850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   851 ;;      Params:         2       0       0       0       0       0       0       0       0
   852 ;;      Locals:         0       0       0       0       0       0       0       0       0
   853 ;;      Temps:          0       0       0       0       0       0       0       0       0
   854 ;;      Totals:         2       0       0       0       0       0       0       0       0
   855 ;;Total ram usage:        2 bytes
   856 ;; Hardware stack levels used:    1
   857 ;; Hardware stack levels required when called:    2
   858 ;; This function calls:
   859 ;;		_LCD_Char
   860 ;; This function is called by:
   861 ;;		_LCD_String_xy
   862 ;; This function uses a non-reentrant model
   863 ;;
   864                           
   865                           	psect	text3
   866  000B44                     __ptext3:
   867                           	opt stack 0
   868  000B44                     _LCD_String:
   869                           	opt stack 27
   870                           
   871                           ;LCD_16x2_4bit_mode.c: 55: while((*msg)!=0)
   872                           
   873                           ;incstack = 0
   874  000B44  D00B               	goto	l980
   875  000B46                     l976:
   876                           
   877                           ;LCD_16x2_4bit_mode.c: 56: {
   878                           ;LCD_16x2_4bit_mode.c: 57: LCD_Char(*msg);
   879  000B46  C019  FFF6         	movff	LCD_String@msg,tblptrl
   880  000B4A  C01A  FFF7         	movff	LCD_String@msg+1,tblptrh
   881  000B4E                     	if	0	;tblptru may be non-zero
   882  000B4E                     	endif
   883  000B4E                     	if	0	;tblptru may be non-zero
   884  000B4E                     	endif
   885  000B4E  0008               	tblrd		*
   886  000B50  50F5               	movf	tablat,w,c
   887  000B52  ECCD  F004         	call	_LCD_Char
   888                           
   889                           ;LCD_16x2_4bit_mode.c: 58: msg++;
   890  000B56  4A19               	infsnz	LCD_String@msg,f,c
   891  000B58  2A1A               	incf	LCD_String@msg+1,f,c
   892  000B5A  D000               	goto	l980
   893  000B5C                     l980:
   894  000B5C  C019  FFF6         	movff	LCD_String@msg,tblptrl
   895  000B60  C01A  FFF7         	movff	LCD_String@msg+1,tblptrh
   896  000B64                     	if	0	;tblptru may be non-zero
   897  000B64                     	endif
   898  000B64                     	if	0	;tblptru may be non-zero
   899  000B64                     	endif
   900  000B64  0008               	tblrd		*
   901  000B66  50F5               	movf	tablat,w,c
   902  000B68  0900               	iorlw	0
   903  000B6A  A4D8               	btfss	status,2,c
   904  000B6C  D7EC               	goto	l976
   905  000B6E  0012               	return		;funcret
   906  000B70                     __end_of_LCD_String:
   907                           	opt stack 0
   908                           tblptru	equ	0xFF8
   909                           tblptrh	equ	0xFF7
   910                           tblptrl	equ	0xFF6
   911                           tablat	equ	0xFF5
   912                           prodh	equ	0xFF4
   913                           prodl	equ	0xFF3
   914                           intcon2	equ	0xFF1
   915                           postinc0	equ	0xFEE
   916                           postdec1	equ	0xFE5
   917                           fsr1l	equ	0xFE1
   918                           indf2	equ	0xFDF
   919                           fsr2h	equ	0xFDA
   920                           fsr2l	equ	0xFD9
   921                           status	equ	0xFD8
   922                           
   923 ;; *************** function _LCD_Char *****************
   924 ;; Defined at:
   925 ;;		line 39 in file "LCD_16x2_4bit_mode.c"
   926 ;; Parameters:    Size  Location     Type
   927 ;;  dat             1    wreg     unsigned char 
   928 ;; Auto vars:     Size  Location     Type
   929 ;;  dat             1    7[COMRAM] unsigned char 
   930 ;; Return value:  Size  Location     Type
   931 ;;		None               void
   932 ;; Registers used:
   933 ;;		wreg, status,2, status,0, cstack
   934 ;; Tracked objects:
   935 ;;		On entry : 0/0
   936 ;;		On exit  : 0/0
   937 ;;		Unchanged: 0/0
   938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   939 ;;      Params:         0       0       0       0       0       0       0       0       0
   940 ;;      Locals:         1       0       0       0       0       0       0       0       0
   941 ;;      Temps:          1       0       0       0       0       0       0       0       0
   942 ;;      Totals:         2       0       0       0       0       0       0       0       0
   943 ;;Total ram usage:        2 bytes
   944 ;; Hardware stack levels used:    1
   945 ;; Hardware stack levels required when called:    1
   946 ;; This function calls:
   947 ;;		_MSdelay
   948 ;; This function is called by:
   949 ;;		_LCD_String
   950 ;;		_main
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954                           	psect	text4
   955  00099A                     __ptext4:
   956                           	opt stack 0
   957  00099A                     _LCD_Char:
   958                           	opt stack 27
   959                           
   960                           ;incstack = 0
   961                           ;LCD_Char@dat stored from wreg
   962  00099A  6E18               	movwf	LCD_Char@dat,c
   963                           
   964                           ;LCD_16x2_4bit_mode.c: 41: LATD = (LATD & 0x0f) | (0xF0 & dat);
   965  00099C  C018  F017         	movff	LCD_Char@dat,??_LCD_Char
   966  0009A0  0EF0               	movlw	240
   967  0009A2  1617               	andwf	??_LCD_Char,f,c
   968  0009A4  508C               	movf	3980,w,c	;volatile
   969  0009A6  0B0F               	andlw	15
   970  0009A8  1017               	iorwf	??_LCD_Char,w,c
   971  0009AA  6E8C               	movwf	3980,c	;volatile
   972                           
   973                           ;LCD_16x2_4bit_mode.c: 42: LATD0 = 1;
   974  0009AC  808C               	bsf	3980,0,c	;volatile
   975                           
   976                           ;LCD_16x2_4bit_mode.c: 43: LATD1 = 1;
   977  0009AE  828C               	bsf	3980,1,c	;volatile
   978                           
   979                           ;LCD_16x2_4bit_mode.c: 44: __nop();
   980  0009B0  F000               	nop	
   981                           
   982                           ;LCD_16x2_4bit_mode.c: 45: LATD1 = 0;
   983  0009B2  928C               	bcf	3980,1,c	;volatile
   984                           
   985                           ;LCD_16x2_4bit_mode.c: 46: MSdelay(1);
   986  0009B4  0E00               	movlw	0
   987  0009B6  6E12               	movwf	MSdelay@val+1,c
   988  0009B8  0E01               	movlw	1
   989  0009BA  6E11               	movwf	MSdelay@val,c
   990  0009BC  EC19  F005         	call	_MSdelay	;wreg free
   991                           
   992                           ;LCD_16x2_4bit_mode.c: 47: LATD = (LATD & 0x0f) | (dat<<4);
   993  0009C0  C018  F017         	movff	LCD_Char@dat,??_LCD_Char
   994  0009C4  3A17               	swapf	??_LCD_Char,f,c
   995  0009C6  0EF0               	movlw	240
   996  0009C8  1617               	andwf	??_LCD_Char,f,c
   997  0009CA  508C               	movf	3980,w,c	;volatile
   998  0009CC  0B0F               	andlw	15
   999  0009CE  1017               	iorwf	??_LCD_Char,w,c
  1000  0009D0  6E8C               	movwf	3980,c	;volatile
  1001                           
  1002                           ;LCD_16x2_4bit_mode.c: 48: LATD1 = 1;
  1003  0009D2  828C               	bsf	3980,1,c	;volatile
  1004                           
  1005                           ;LCD_16x2_4bit_mode.c: 49: __nop();
  1006  0009D4  F000               	nop	
  1007                           
  1008                           ;LCD_16x2_4bit_mode.c: 50: LATD1 = 0;
  1009  0009D6  928C               	bcf	3980,1,c	;volatile
  1010                           
  1011                           ;LCD_16x2_4bit_mode.c: 51: MSdelay(3);
  1012  0009D8  0E00               	movlw	0
  1013  0009DA  6E12               	movwf	MSdelay@val+1,c
  1014  0009DC  0E03               	movlw	3
  1015  0009DE  6E11               	movwf	MSdelay@val,c
  1016  0009E0  EC19  F005         	call	_MSdelay	;wreg free
  1017  0009E4  0012               	return		;funcret
  1018  0009E6                     __end_of_LCD_Char:
  1019                           	opt stack 0
  1020                           tblptru	equ	0xFF8
  1021                           tblptrh	equ	0xFF7
  1022                           tblptrl	equ	0xFF6
  1023                           tablat	equ	0xFF5
  1024                           prodh	equ	0xFF4
  1025                           prodl	equ	0xFF3
  1026                           intcon2	equ	0xFF1
  1027                           postinc0	equ	0xFEE
  1028                           postdec1	equ	0xFE5
  1029                           fsr1l	equ	0xFE1
  1030                           indf2	equ	0xFDF
  1031                           fsr2h	equ	0xFDA
  1032                           fsr2l	equ	0xFD9
  1033                           status	equ	0xFD8
  1034                           
  1035 ;; *************** function _LCD_Init *****************
  1036 ;; Defined at:
  1037 ;;		line 8 in file "LCD_16x2_4bit_mode.c"
  1038 ;; Parameters:    Size  Location     Type
  1039 ;;		None
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;		None
  1042 ;; Return value:  Size  Location     Type
  1043 ;;		None               void
  1044 ;; Registers used:
  1045 ;;		wreg, status,2, status,0, cstack
  1046 ;; Tracked objects:
  1047 ;;		On entry : 0/0
  1048 ;;		On exit  : 0/0
  1049 ;;		Unchanged: 0/0
  1050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1051 ;;      Params:         0       0       0       0       0       0       0       0       0
  1052 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1053 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1054 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1055 ;;Total ram usage:        0 bytes
  1056 ;; Hardware stack levels used:    1
  1057 ;; Hardware stack levels required when called:    2
  1058 ;; This function calls:
  1059 ;;		_LCD_Command
  1060 ;;		_MSdelay
  1061 ;; This function is called by:
  1062 ;;		_main
  1063 ;; This function uses a non-reentrant model
  1064 ;;
  1065                           
  1066                           	psect	text5
  1067  000B14                     __ptext5:
  1068                           	opt stack 0
  1069  000B14                     _LCD_Init:
  1070                           	opt stack 28
  1071                           
  1072                           ;LCD_16x2_4bit_mode.c: 10: TRISD = 0;
  1073                           
  1074                           ;incstack = 0
  1075  000B14  0E00               	movlw	0
  1076  000B16  6E95               	movwf	3989,c	;volatile
  1077                           
  1078                           ;LCD_16x2_4bit_mode.c: 11: MSdelay(15);
  1079  000B18  0E00               	movlw	0
  1080  000B1A  6E12               	movwf	MSdelay@val+1,c
  1081  000B1C  0E0F               	movlw	15
  1082  000B1E  6E11               	movwf	MSdelay@val,c
  1083  000B20  EC19  F005         	call	_MSdelay	;wreg free
  1084                           
  1085                           ;LCD_16x2_4bit_mode.c: 12: LCD_Command(0x02);
  1086  000B24  0E02               	movlw	2
  1087  000B26  ECF3  F004         	call	_LCD_Command
  1088                           
  1089                           ;LCD_16x2_4bit_mode.c: 14: LCD_Command(0x28);
  1090  000B2A  0E28               	movlw	40
  1091  000B2C  ECF3  F004         	call	_LCD_Command
  1092                           
  1093                           ;LCD_16x2_4bit_mode.c: 16: LCD_Command(0x01);
  1094  000B30  0E01               	movlw	1
  1095  000B32  ECF3  F004         	call	_LCD_Command
  1096                           
  1097                           ;LCD_16x2_4bit_mode.c: 17: LCD_Command(0x0c);
  1098  000B36  0E0C               	movlw	12
  1099  000B38  ECF3  F004         	call	_LCD_Command
  1100                           
  1101                           ;LCD_16x2_4bit_mode.c: 18: LCD_Command(0x06);
  1102  000B3C  0E06               	movlw	6
  1103  000B3E  ECF3  F004         	call	_LCD_Command
  1104  000B42  0012               	return		;funcret
  1105  000B44                     __end_of_LCD_Init:
  1106                           	opt stack 0
  1107                           tblptru	equ	0xFF8
  1108                           tblptrh	equ	0xFF7
  1109                           tblptrl	equ	0xFF6
  1110                           tablat	equ	0xFF5
  1111                           prodh	equ	0xFF4
  1112                           prodl	equ	0xFF3
  1113                           intcon2	equ	0xFF1
  1114                           postinc0	equ	0xFEE
  1115                           postdec1	equ	0xFE5
  1116                           fsr1l	equ	0xFE1
  1117                           indf2	equ	0xFDF
  1118                           fsr2h	equ	0xFDA
  1119                           fsr2l	equ	0xFD9
  1120                           status	equ	0xFD8
  1121                           
  1122 ;; *************** function _LCD_Command *****************
  1123 ;; Defined at:
  1124 ;;		line 21 in file "LCD_16x2_4bit_mode.c"
  1125 ;; Parameters:    Size  Location     Type
  1126 ;;  cmd             1    wreg     unsigned char 
  1127 ;; Auto vars:     Size  Location     Type
  1128 ;;  cmd             1    7[COMRAM] unsigned char 
  1129 ;; Return value:  Size  Location     Type
  1130 ;;		None               void
  1131 ;; Registers used:
  1132 ;;		wreg, status,2, status,0, cstack
  1133 ;; Tracked objects:
  1134 ;;		On entry : 0/0
  1135 ;;		On exit  : 0/0
  1136 ;;		Unchanged: 0/0
  1137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1138 ;;      Params:         0       0       0       0       0       0       0       0       0
  1139 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1140 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1141 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1142 ;;Total ram usage:        2 bytes
  1143 ;; Hardware stack levels used:    1
  1144 ;; Hardware stack levels required when called:    1
  1145 ;; This function calls:
  1146 ;;		_MSdelay
  1147 ;; This function is called by:
  1148 ;;		_LCD_Init
  1149 ;;		_LCD_String_xy
  1150 ;;		_main
  1151 ;;		_LCD_Clear
  1152 ;; This function uses a non-reentrant model
  1153 ;;
  1154                           
  1155                           	psect	text6
  1156  0009E6                     __ptext6:
  1157                           	opt stack 0
  1158  0009E6                     _LCD_Command:
  1159                           	opt stack 28
  1160                           
  1161                           ;incstack = 0
  1162                           ;LCD_Command@cmd stored from wreg
  1163  0009E6  6E18               	movwf	LCD_Command@cmd,c
  1164                           
  1165                           ;LCD_16x2_4bit_mode.c: 23: LATD = (LATD & 0x0f) |(0xF0 & cmd);
  1166  0009E8  C018  F017         	movff	LCD_Command@cmd,??_LCD_Command
  1167  0009EC  0EF0               	movlw	240
  1168  0009EE  1617               	andwf	??_LCD_Command,f,c
  1169  0009F0  508C               	movf	3980,w,c	;volatile
  1170  0009F2  0B0F               	andlw	15
  1171  0009F4  1017               	iorwf	??_LCD_Command,w,c
  1172  0009F6  6E8C               	movwf	3980,c	;volatile
  1173                           
  1174                           ;LCD_16x2_4bit_mode.c: 24: LATD0 = 0;
  1175  0009F8  908C               	bcf	3980,0,c	;volatile
  1176                           
  1177                           ;LCD_16x2_4bit_mode.c: 25: LATD1 = 1;
  1178  0009FA  828C               	bsf	3980,1,c	;volatile
  1179                           
  1180                           ;LCD_16x2_4bit_mode.c: 26: __nop();
  1181  0009FC  F000               	nop	
  1182                           
  1183                           ;LCD_16x2_4bit_mode.c: 27: LATD1 = 0;
  1184  0009FE  928C               	bcf	3980,1,c	;volatile
  1185                           
  1186                           ;LCD_16x2_4bit_mode.c: 28: MSdelay(1);
  1187  000A00  0E00               	movlw	0
  1188  000A02  6E12               	movwf	MSdelay@val+1,c
  1189  000A04  0E01               	movlw	1
  1190  000A06  6E11               	movwf	MSdelay@val,c
  1191  000A08  EC19  F005         	call	_MSdelay	;wreg free
  1192                           
  1193                           ;LCD_16x2_4bit_mode.c: 29: LATD = (LATD & 0x0f) | (cmd<<4);
  1194  000A0C  C018  F017         	movff	LCD_Command@cmd,??_LCD_Command
  1195  000A10  3A17               	swapf	??_LCD_Command,f,c
  1196  000A12  0EF0               	movlw	240
  1197  000A14  1617               	andwf	??_LCD_Command,f,c
  1198  000A16  508C               	movf	3980,w,c	;volatile
  1199  000A18  0B0F               	andlw	15
  1200  000A1A  1017               	iorwf	??_LCD_Command,w,c
  1201  000A1C  6E8C               	movwf	3980,c	;volatile
  1202                           
  1203                           ;LCD_16x2_4bit_mode.c: 30: LATD1 = 1;
  1204  000A1E  828C               	bsf	3980,1,c	;volatile
  1205                           
  1206                           ;LCD_16x2_4bit_mode.c: 31: __nop();
  1207  000A20  F000               	nop	
  1208                           
  1209                           ;LCD_16x2_4bit_mode.c: 32: LATD1 = 0;
  1210  000A22  928C               	bcf	3980,1,c	;volatile
  1211                           
  1212                           ;LCD_16x2_4bit_mode.c: 33: MSdelay(3);
  1213  000A24  0E00               	movlw	0
  1214  000A26  6E12               	movwf	MSdelay@val+1,c
  1215  000A28  0E03               	movlw	3
  1216  000A2A  6E11               	movwf	MSdelay@val,c
  1217  000A2C  EC19  F005         	call	_MSdelay	;wreg free
  1218  000A30  0012               	return		;funcret
  1219  000A32                     __end_of_LCD_Command:
  1220                           	opt stack 0
  1221                           tblptru	equ	0xFF8
  1222                           tblptrh	equ	0xFF7
  1223                           tblptrl	equ	0xFF6
  1224                           tablat	equ	0xFF5
  1225                           prodh	equ	0xFF4
  1226                           prodl	equ	0xFF3
  1227                           intcon2	equ	0xFF1
  1228                           postinc0	equ	0xFEE
  1229                           postdec1	equ	0xFE5
  1230                           fsr1l	equ	0xFE1
  1231                           indf2	equ	0xFDF
  1232                           fsr2h	equ	0xFDA
  1233                           fsr2l	equ	0xFD9
  1234                           status	equ	0xFD8
  1235                           
  1236 ;; *************** function _MSdelay *****************
  1237 ;; Defined at:
  1238 ;;		line 87 in file "LCD_16x2_4bit_mode.c"
  1239 ;; Parameters:    Size  Location     Type
  1240 ;;  val             2    0[COMRAM] unsigned int 
  1241 ;; Auto vars:     Size  Location     Type
  1242 ;;  j               2    4[COMRAM] unsigned int 
  1243 ;;  i               2    2[COMRAM] unsigned int 
  1244 ;; Return value:  Size  Location     Type
  1245 ;;		None               void
  1246 ;; Registers used:
  1247 ;;		wreg, status,2, status,0
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 0/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1253 ;;      Params:         2       0       0       0       0       0       0       0       0
  1254 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1255 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1256 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1257 ;;Total ram usage:        6 bytes
  1258 ;; Hardware stack levels used:    1
  1259 ;; This function calls:
  1260 ;;		Nothing
  1261 ;; This function is called by:
  1262 ;;		_LCD_Init
  1263 ;;		_LCD_Command
  1264 ;;		_LCD_Char
  1265 ;;		_keyfind
  1266 ;; This function uses a non-reentrant model
  1267 ;;
  1268                           
  1269                           	psect	text7
  1270  000A32                     __ptext7:
  1271                           	opt stack 0
  1272  000A32                     _MSdelay:
  1273                           	opt stack 29
  1274                           
  1275                           ;LCD_16x2_4bit_mode.c: 89: unsigned int i,j;
  1276                           ;LCD_16x2_4bit_mode.c: 90: for(i=0;i<val;i++)
  1277                           
  1278                           ;incstack = 0
  1279  000A32  0E00               	movlw	0
  1280  000A34  6E14               	movwf	MSdelay@i+1,c
  1281  000A36  0E00               	movlw	0
  1282  000A38  6E13               	movwf	MSdelay@i,c
  1283  000A3A  D013               	goto	l932
  1284  000A3C                     l920:
  1285                           
  1286                           ;LCD_16x2_4bit_mode.c: 91: for(j=0;j<165;j++);
  1287  000A3C  0E00               	movlw	0
  1288  000A3E  6E16               	movwf	MSdelay@j+1,c
  1289  000A40  0E00               	movlw	0
  1290  000A42  6E15               	movwf	MSdelay@j,c
  1291  000A44                     l922:
  1292  000A44  5016               	movf	MSdelay@j+1,w,c
  1293  000A46  E10A               	bnz	l930
  1294  000A48  0EA5               	movlw	165
  1295  000A4A  5C15               	subwf	MSdelay@j,w,c
  1296  000A4C  B0D8               	btfsc	status,0,c
  1297  000A4E  D006               	goto	l930
  1298  000A50  D001               	goto	l926
  1299  000A52  D004               	goto	l930
  1300  000A54                     l926:
  1301  000A54  4A15               	infsnz	MSdelay@j,f,c
  1302  000A56  2A16               	incf	MSdelay@j+1,f,c
  1303  000A58  D7F5               	goto	l922
  1304  000A5A  D000               	goto	l930
  1305  000A5C                     l930:
  1306  000A5C  4A13               	infsnz	MSdelay@i,f,c
  1307  000A5E  2A14               	incf	MSdelay@i+1,f,c
  1308  000A60  D000               	goto	l932
  1309  000A62                     l932:
  1310  000A62  5011               	movf	MSdelay@val,w,c
  1311  000A64  5C13               	subwf	MSdelay@i,w,c
  1312  000A66  5012               	movf	MSdelay@val+1,w,c
  1313  000A68  5814               	subwfb	MSdelay@i+1,w,c
  1314  000A6A  A0D8               	btfss	status,0,c
  1315  000A6C  D7E7               	goto	l920
  1316  000A6E  0012               	return		;funcret
  1317  000A70                     __end_of_MSdelay:
  1318                           	opt stack 0
  1319                           tblptru	equ	0xFF8
  1320                           tblptrh	equ	0xFF7
  1321                           tblptrl	equ	0xFF6
  1322                           tablat	equ	0xFF5
  1323                           prodh	equ	0xFF4
  1324                           prodl	equ	0xFF3
  1325                           intcon2	equ	0xFF1
  1326                           postinc0	equ	0xFEE
  1327                           postdec1	equ	0xFE5
  1328                           fsr1l	equ	0xFE1
  1329                           indf2	equ	0xFDF
  1330                           fsr2h	equ	0xFDA
  1331                           fsr2l	equ	0xFD9
  1332                           status	equ	0xFD8
  1333                           tblptru	equ	0xFF8
  1334                           tblptrh	equ	0xFF7
  1335                           tblptrl	equ	0xFF6
  1336                           tablat	equ	0xFF5
  1337                           prodh	equ	0xFF4
  1338                           prodl	equ	0xFF3
  1339                           intcon2	equ	0xFF1
  1340                           postinc0	equ	0xFEE
  1341                           postdec1	equ	0xFE5
  1342                           fsr1l	equ	0xFE1
  1343                           indf2	equ	0xFDF
  1344                           fsr2h	equ	0xFDA
  1345                           fsr2l	equ	0xFD9
  1346                           status	equ	0xFD8
  1347                           
  1348                           	psect	rparam
  1349  0000                     tblptru	equ	0xFF8
  1350                           tblptrh	equ	0xFF7
  1351                           tblptrl	equ	0xFF6
  1352                           tablat	equ	0xFF5
  1353                           prodh	equ	0xFF4
  1354                           prodl	equ	0xFF3
  1355                           intcon2	equ	0xFF1
  1356                           postinc0	equ	0xFEE
  1357                           postdec1	equ	0xFE5
  1358                           fsr1l	equ	0xFE1
  1359                           indf2	equ	0xFDF
  1360                           fsr2h	equ	0xFDA
  1361                           fsr2l	equ	0xFD9
  1362                           status	equ	0xFD8


Data Sizes:
    Strings     12
    Constant    0
    Data        16
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     16      35
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 


Critical Paths under _main in COMRAM

    _main->_LCD_String_xy
    _keyfind->_MSdelay
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Init->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    4194
                                             15 COMRAM     1     1      0
                           _LCD_Char
                        _LCD_Command
                           _LCD_Init
                      _LCD_String_xy
                            _keyfind
 ---------------------------------------------------------------------------------
 (1) _keyfind                                              1     1      0     516
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        5     2      3    1459
                                             10 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     0      2     658
                                              8 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             2     2      0     560
                                              6 COMRAM     2     2      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0    1076
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          2     2      0     560
                                              6 COMRAM     2     2      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _MSdelay                                              6     4      2     516
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Char
     _MSdelay
   _LCD_Command
     _MSdelay
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_String_xy
     _LCD_Command
       _MSdelay
     _LCD_String
       _LCD_Char
         _MSdelay
   _keyfind
     _MSdelay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     10      23       1       36.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      23      20        0.0%
DATA                 0      0      23       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Oct 20 12:37:09 2016

           ?_LCD_Command 0011                       l94 0898                       l99 08C6  
            __CFG_BOR$ON 000000              __CFG_BORV$3 000000              ?_LCD_String 0019  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000                      l103 08F4                      l113 0998  
                    l107 0922                      l920 0A3C                      l930 0A5C  
                    l922 0A44                      l932 0A62                      l926 0A54  
                    l980 0B5C                      l976 0B46             __CFG_CPB$OFF 000000  
           __CFG_CPD$OFF 000000                      prod 000FF3             __CFG_LVP$OFF 000000  
            LCD_Char@dat 0018             __CFG_WDT$OFF 000000                     l1004 0A8C  
                   l1012 0818                     l1022 0846                     l1008 0A9C  
                   l1104 0980                     l1032 0876                     l1042 0892  
                   l1122 0ACE                     l1044 08A4                     l1054 08C0  
                   l1056 08D2                     l1080 0932                     l1066 08EE  
                   l1068 0900                     l1078 091C                     l1096 0966  
                   l1088 0944                     STR_1 0801                     _LATB 000F8A  
                   _LATD 000F8C                     _RBPU 007F8F                     _main 0AAA  
                   fsr1l 000FE1                     indf2 000FDF                     fsr2l 000FD9  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
        __end_of_MSdelay 0A70            __CFG_IESO$OFF 000000            _LCD_String_xy 0A70  
           ___param_bank 000010         __end_of_LCD_Char 09E6         __end_of_LCD_Init 0B44  
          __CFG_PLLDIV$1 000000           __CFG_CCP2MX$ON 000000                    ?_main 0011  
                  _LATD0 007C60                    _LATD1 007C61                    _PORTB 000F81  
          __CFG_USBDIV$1 000000                    _TRISB 000F93                    _TRISD 000F95  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000          __end_of_keyfind 099A  
                  tablat 000FF5                    status 000FD8      __size_of_LCD_String 002C  
         __CFG_ICPRT$OFF 000000           ?_LCD_String_xy 001B           __CFG_MCLRE$OFF 000000  
        __initialization 0AE0             __end_of_main 0AE0                   ??_main 0020  
          __activetblptr 000001         LCD_String_xy@msg 001C         LCD_String_xy@pos 001B  
       LCD_String_xy@row 001E                ??_MSdelay 0013                   _OSCCON 000FD3  
         __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000                   _keypad 0001  
                 _rowloc 0022     __size_of_LCD_Command 004C             __pdataCOMRAM 0001  
              ??_keyfind 0017             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                ?_LCD_Char 0011  
             __accesstop 0060  __end_of__initialization 0B06                ?_LCD_Init 0011  
        __CFG_PBADEN$OFF 000000          ??_LCD_String_xy 001E            ___rparam_used 000001  
         __pcstackCOMRAM 0011             ??_LCD_String 001B               ??_LCD_Char 0017  
             ??_LCD_Init 0019       __end_of_LCD_String 0B70                  _MSdelay 0A32  
        __CFG_VREGEN$OFF 000000            LCD_String@msg 0019                  __Hparam 0000  
                __Lparam 0000             __psmallconst 0800                  __pcinit 0AE0  
                __ramtop 0800                  __ptext0 0AAA                  __ptext1 080E  
                __ptext2 0A70                  __ptext3 0B44                  __ptext4 099A  
                __ptext5 0B14                  __ptext6 09E6                  __ptext7 0A32  
                _col_loc 0021                  _keyfind 080E                  main@key 0020  
   end_of_initialization 0B06           LCD_Command@cmd 0018                  postdec1 000FE5  
                postinc0 000FEE        __size_of_LCD_Char 004C        __size_of_LCD_Init 0030  
          ??_LCD_Command 0017            __pidataCOMRAM 0B70      start_initialization 0AE0  
  __end_of_LCD_String_xy 0AAA         __CFG_LPT1OSC$OFF 000000      __end_of_LCD_Command 0A32  
            __pbssCOMRAM 0021                 ?_MSdelay 0011              __smallconst 0800  
               ?_keyfind 0011    LCD_String_xy@location 001F                 MSdelay@i 0013  
               MSdelay@j 0015                 _LCD_Char 099A                 _LCD_Init 0B14  
       __CFG_WDTPS$32768 000000              _LCD_Command 09E6                copy_data0 0AFA  
       __size_of_MSdelay 003E                 __Hrparam 0000                 __Lrparam 0000  
           __Lsmallconst 0800         __size_of_keyfind 018C            __size_of_main 0036  
             MSdelay@val 0011                 _temp_col 0023               _LCD_String 0B44  
  __CFG_CPUDIV$OSC1_PLL2 000000      __CFG_FOSC$INTOSC_EC 000000   __size_of_LCD_String_xy 003A  
